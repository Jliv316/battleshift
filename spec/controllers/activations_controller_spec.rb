require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.
#
# Also compared to earlier versions of this generator, there are no longer any
# expectations of assigns and templates rendered. These features have been
# removed from Rails core in Rails 5, but can be added back in via the
# `rails-controller-testing` gem.

RSpec.describe ActivationController, type: :controller do
  let(:user1) { create(:user, activated: false) }

  describe "GET #show" do
    it "returns a success response" do
      request.session[:id] = user1.id

      expect(user1.activated).to be false

      result = get :show, params: { username: user1.username, api_key: user1.api_key }

      expect(User.find(user1.id).activated).to be true
      expect(result).to redirect_to("/dashboard/#{user1.id}")
      expect(controller).to set_flash[:notice].to(/Thank you! Your account is now activated/)
    end

    it "Sends the user to login if they aren't logged in" do
      expect(user1.activated).to be false

      result = get :show, params: { username: "Fake_Username", api_key: user1.api_key }

      expect(result).to redirect_to("/login")
      expect(controller).to set_flash[:notice].to(/You must log in before you can fully activate/)
    end
  end
end
